<?xml version='1.0' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1.0">
  <actions>
    <hudson.model.CauseAction>
      <causes>
        <hudson.model.Cause_-UserIdCause/>
      </causes>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@3.0.9">
      <queuingDurationMillis>4</queuingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.uniqueid.impl.Id plugin="unique-id@1.2">
      <id>OGNiNzc4ZDgtMTFjYi00Zjg3LTk4Zm</id>
    </org.jenkinsci.plugins.uniqueid.impl.Id>
  </actions>
  <number>11</number>
  <startTime>1417724644465</startTime>
  <result>FAILURE</result>
  <duration>2249</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>def flow
def devQAStaging() {
    tool name: &apos;Maven_3&apos;, type: &apos;hudson.tasks.Maven$MavenInstallation&apos;
    stage &apos;Dev&apos;
    sh &apos;mvn -o clean package&apos;
    archive &apos;target/x.war&apos;

    stage &apos;QA&apos;

    parallel(longerTests: {
        runWithServer {url -&gt;
            sh &quot;mvn -o -f sometests/pom.xml test -Durl=${url} -Dduration=30&quot;
        }
    }, quickerTests: {
        runWithServer {url -&gt;
            sh &quot;mvn -o -f sometests/pom.xml test -Durl=${url} -Dduration=20&quot;
        }
    })
    stage name: &apos;Staging&apos;, concurrency: 1
    deploy &apos;target/x.war&apos;, &apos;staging&apos;
}

def production() {
    input message: &quot;Does http://localhost:8080/staging/ look good?&quot;
    try {
        checkpoint(&apos;Before production&apos;)
    } catch (NoSuchMethodError _) {
        echo &apos;Checkpoint feature available in Jenkins Enterprise by CloudBees.&apos;
    }
    stage name: &apos;Production&apos;, concurrency: 1
    node(&apos;master&apos;) {
        sh &apos;curl -I http://localhost:8080/staging/&apos;
        unarchive mapping: [&apos;target/x.war&apos; : &apos;x.war&apos;]
        deploy &apos;x.war&apos;, &apos;production&apos;
        echo &apos;Deployed to http://localhost:8080/production/&apos;
    }
}

def deploy(war, id) {
    sh &quot;cp ${war} /tmp/webapps/${id}.war&quot;
}

def undeploy(id) {
    sh &quot;rm /tmp/webapps/${id}.war&quot;
}

def runWithServer(body) {
    def id = UUID.randomUUID().toString()
    deploy &apos;target/x.war&apos;, id
    try {
        body.call &quot;http://localhost:8080/${id}/&quot;
    } finally {
        undeploy id
    }
}

node(&apos;master&apos;) {
    devQAStaging()
}
production()
</script>
    <loadedScripts class="map"/>
    <owner class="flow-owner">
      <job>cd-workflow</job>
      <id>2014-12-04_20-24-04</id>
    </owner>
    <iota>10</iota>
    <head>1:10</head>
  </execution>
  <checkouts class="linked-list"/>
</flow-build>
<?xml version='1.0' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1.0">
  <actions>
    <hudson.model.CauseAction>
      <causes>
        <hudson.model.Cause_-UserIdCause/>
      </causes>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@3.0.9">
      <queuingDurationMillis>3</queuingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <hudson.plugins.git.util.BuildData plugin="git@2.3">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.11.1">
              <sha1>4fc88619cec240b2003996e29547d93f78bd6996</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>32</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <scmName></scmName>
      <remoteUrls>
        <string>https://github.com/lavaliere/workflow-plugin-pipeline-demo.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@2.3">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>/data/var/lib/jenkins/api-team/workspace/cd-workflow</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.uniqueid.impl.Id plugin="unique-id@1.2">
      <id>NzNlNWY4NDEtY2UxOS00MGEzLTlhNT</id>
    </org.jenkinsci.plugins.uniqueid.impl.Id>
  </actions>
  <number>32</number>
  <startTime>1417805508493</startTime>
  <result>FAILURE</result>
  <duration>14966</duration>
  <keepLog>false</keepLog>
  <artifactManager class="com.cloudbees.jenkins.plugins.jsync.archiver.JSyncArtifactManager" plugin="cloudbees-jsync-archiver@5.3"/>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>def flow

node(&apos;master&apos;) {
    git branch: &apos;master&apos;, changelog: false, poll: false, url: &apos;https://github.com/lavaliere/workflow-plugin-pipeline-demo.git&apos;
    flow = load &apos;flow.groovy&apos;
    flow.devQAStaging()
}

flow.production()
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>def devQAStaging() {
    tool name: &apos;Maven_3&apos;, type: &apos;hudson.tasks.Maven$MavenInstallation&apos;
    stage &apos;Dev&apos;
    sh &apos;mvn install clean package&apos;
    archive &apos;target/x.war&apos;

    stage &apos;QA&apos;

    parallel(longerTests: {
        runWithServer {url -&gt;
            sh &quot;mvn -o -f sometests/pom.xml test -Durl=${url} -Dduration=30&quot;
        }
    }, quickerTests: {
        runWithServer {url -&gt;
            sh &quot;mvn -o -f sometests/pom.xml test -Durl=${url} -Dduration=20&quot;
        }
    })
    stage name: &apos;Staging&apos;, concurrency: 1
    deploy &apos;target/x.war&apos;, &apos;staging&apos;
}

def production() {
    input message: &quot;Does http://localhost:8080/staging/ look good?&quot;
    try {
        checkpoint(&apos;Before production&apos;)
    } catch (NoSuchMethodError _) {
        echo &apos;Checkpoint feature available in Jenkins Enterprise by CloudBees.&apos;
    }
    stage name: &apos;Production&apos;, concurrency: 1
    node(&apos;master&apos;) {
        sh &apos;curl -I http://localhost:8080/staging/&apos;
        unarchive mapping: [&apos;target/x.war&apos; : &apos;x.war&apos;]
        deploy &apos;x.war&apos;, &apos;production&apos;
        echo &apos;Deployed to http://localhost:8080/production/&apos;
    }
}

def deploy(war, id) {
    sh &quot;cp ${war} /tmp/webapps/${id}.war&quot;
}

def undeploy(id) {
    sh &quot;rm /tmp/webapps/${id}.war&quot;
}

def runWithServer(body) {
    def id = UUID.randomUUID().toString()
    def url
    url = sh &apos;grep `hostname` /etc/hosts |awk &apos;{print $1}&apos;&apos;
    deploy &apos;target/x.war&apos;, id
    try {
        body.call url + &quot;/${id}/&quot;
    } finally {
        undeploy id
    }
}

return this;
</string>
      </entry>
    </loadedScripts>
    <owner class="flow-owner">
      <job>cd-workflow</job>
      <id>2014-12-05_18-51-48</id>
    </owner>
    <iota>23</iota>
    <head>1:23</head>
  </execution>
  <checkouts class="linked-list">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/lavaliere/workflow-plugin-pipeline-demo.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/data/var/lib/jenkins/api-team/workspace/cd-workflow</workspace>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>